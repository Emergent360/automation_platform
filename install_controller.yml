---

- name: "install controller"
  hosts: all
  gather_facts: no
  vars:
    offline_token: "eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhZDUyMjdhMy1iY2ZkLTRjZjAtYTdiNi0zOTk4MzVhMDg1NjYifQ.eyJpYXQiOjE2NDk4NzQ3MDgsImp0aSI6ImM5YjIwNjJmLTlhOTItNDkwNi1iYzFjLTllNWQ2Njc5ZDMyOSIsImlzcyI6Imh0dHBzOi8vc3NvLnJlZGhhdC5jb20vYXV0aC9yZWFsbXMvcmVkaGF0LWV4dGVybmFsIiwiYXVkIjoiaHR0cHM6Ly9zc28ucmVkaGF0LmNvbS9hdXRoL3JlYWxtcy9yZWRoYXQtZXh0ZXJuYWwiLCJzdWIiOiJmOjUyOGQ3NmZmLWY3MDgtNDNlZC04Y2Q1LWZlMTZmNGZlMGNlNjpkcHVsbG1hbkBlbWVyZ2VudDM2MC5jb20iLCJ0eXAiOiJPZmZsaW5lIiwiYXpwIjoicmhzbS1hcGkiLCJzZXNzaW9uX3N0YXRlIjoiYWRmY2E2YzYtZGMyYy00ZGE2LWIwNDItMWE5NDY3MzY1MjA1Iiwic2NvcGUiOiJvZmZsaW5lX2FjY2VzcyIsInNpZCI6ImFkZmNhNmM2LWRjMmMtNGRhNi1iMDQyLTFhOTQ2NzM2NTIwNSJ9.K0765ZkHfMaIfdRD7L8prPG9iOyvHBAri9uVbU3-V9M"
    
  tasks:
  - name: Generating an access token
    uri:
      url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
      method: POST
      body_format: form-urlencoded
      return_content: true
      body:
        grant_type: "refresh_token"
        client_id: "rhsm-api"
        refresh_token: "{{ offline_token }}"
    register: temp_token
    until: temp_token is not failed
    retries: 15
    delay: 20

  - name: check if aap.tar.gz exists
    stat:
      path: "{{ playbook_dir }}/aap.tar.gz"
      checksum_algorithm: sha256
    register: stat_var

  - name: Download aap.tar.gz
    get_url:
      url: "https://api.access.redhat.com/management/v1/images/{{ provided_sha_value }}/download"
      headers:
        accept: "application/json"
        Authorization: "Bearer {{ temp_token.json.access_token }}"
      dest: "/home/ec2-user/aap.tar.gz"
      checksum: "sha256: {{ provided_sha_value }}"
    register: download_aap_tarball
    until: download_aap_tarball is not failed
    retries: 15
    delay: 20
    when: not stat_var.stat.exists

  - name: check if aap.tar.gz again (post download)
    stat:
      path: "/home/ec2-user/aap.tar.gz"
      checksum_algorithm: sha256
    register: stat_var

  - name: Verify sha256sum of aap.tar.gz
    fail:
      msg: "Failure, sha256sum does not match"
    when: stat_var.stat.checksum != provided_sha_value

  - name: Extract AAP tar.gz install
    ansible.builtin.unarchive:
      src: "/home/ec2-user/aap.tar.gz"
      dest: "/home/ec2-user/"
      remote_src: true

  - name: get setup dir name
    ansible.builtin.find:
      path: /home/ec2-user
      file_type: directory
      patterns: "^ansible-automation-platform-setup-.*$"
      use_regex: yes
    register: setup_dir

  - name: set symlink
    ansible.builtin.file:
      src: "{{ setup_dir.files[0].path }}"
      dest: "/home/ec2-user/ansible-automation-platform-setup"
      owner: ec2-user
      group: ec2-user
      state: link

  - name: template inventory file for Ansible Controller Install
    ansible.builtin.template:
      src: "standalone_controller_inventory.j2"
      dest: "/home/ec2-user/ansible-automation-platform-setup/inventory"
      backup: yes

  - name: install aws cli
    ansible.builtin.include_tasks: install_aws_cli.yml

  - name: run setup
    ansible.builtin.command: /home/ec2-user/ansible-automation-platform-setup/setup.sh
    become: yes
    args:
      chdir: /home/ec2-user/ansible-automation-platform-setup

